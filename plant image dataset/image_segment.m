clear;close all; clc;
I = imread('ara2013_plant001_rgb.png');
figure, imshow(I);

I = imresize(I, 5);


gray= rgb2gray(I);
figure;
imhist(gray);

%some reason 70 and 80 dont work? Should tho also have better accuracy with
%value.
% Can we do an if statement for finidng perfect value ie lowest?


level = graythresh(gray);
BW = imbinarize(gray, level);
figure, imshow(BW);
segment = segmentImage_from_back(I);
figure, imshow(segment);


%theFiles = dir('*rgb*.png');
%for k = 1 : length(theFiles)
%    baseFileName = theFiles(k).name;
%    fullFileName = fullfile(theFiles(k).folder, baseFileName);
%    fprintf(1, 'Now reading %s\n', fullFileName);
    % Now do whatever you want with this file name,
    % such as reading it in as an image array with imread()
    
%    imageArray = imread(fullFileName);
%    imshow(imageArray);  % Display image.
%    gray = rgb2gray(image 
%    x = segmentImage_from_back(imageArray);
%    figure, imshow(x);
%end




function [BW,maskedImage] = segmentImage_from_back(RGB)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(RGB) segments image RGB using
%  auto-generated code from the imageSegmenter app. The final segmentation
%  is returned in BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 10-Mar-2021
%----------------------------------------------------


% Convert RGB image into L*a*b* color space.
X = rgb2lab(RGB);

% Auto clustering
s = rng;
rng('default');
L = imsegkmeans(single(X),2,'NumAttempts',2);
rng(s);
BW = L == 2;

% Create masked image.
maskedImage = RGB;
maskedImage(repmat(~BW,[1 1 3])) = 0;
end

%dice_score = 2*nnz(segIm&grndTruth)/(nnz(segIm) + nnz(grndTruth))
% need to binarize img for dicescore


%https://uk.mathworks.com/help/images/ref/imsegkmeans.html
%follow tutorial for kmeans segmentation can pass img from above funciton